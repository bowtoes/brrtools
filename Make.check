.POSIX:
.SUFFIXES:

include config.mk

ifndef LIBNAME
 LIBNAME:=$(TARGETNAME)
endif
ifeq ($(TARGET),LINUX)
 TARGETNAME:=$(PROJECT)check
else
 TARGETNAME:=$(PROJECT)check.exe
endif

# Makefiles are stupidly finicky good god
ASS:=$(addprefix $(OUTDIR)/$(ASSDIR)/,$(patsubst $(SRCDIR)/%,%,$(PSRC:.c=.s)))
INT:=$(addprefix $(OUTDIR)/$(INTDIR)/,$(patsubst $(SRCDIR)/%,%,$(PSRC:.c=.e)))
OBJ:=$(addprefix $(OUTDIR)/$(OBJDIR)/,$(patsubst $(SRCDIR)/%,%,$(PSRC:.c=.o)))

all: $(PROJECT)
setup:
	@mkdir -pv $(dir $(ASS)) 2>/dev/null || :
	@mkdir -pv $(dir $(INT)) 2>/dev/null || :
	@mkdir -pv $(dir $(OBJ)) 2>/dev/null || :
options:
	@echo "$(PROJECT) Check Build options:"
	@echo "CFLAGS        = $(CFLAGS)"
	@echo "CPPFLAGS      = $(CPPFLAGS)"
	@echo "STCPPFLAGS    = $(STCPPFLAGS)"
	@echo "$(PROJECT)_PCFLAGS   = $($(PROJECT)_PCFLAGS)"
	@echo "$(PROJECT)_PCPPFLAGS = $($(PROJECT)_PCPPFLAGS)"
	@echo "$(PROJECT)_PLDFLAGS  = $($(PROJECT)_PLDFLAGS)"
	@echo "CC            = $(CC)"

$(OUTDIR)/$(ASSDIR)/%.s: $(SRCDIR)/%.c
	$(CC) $($(PROJECT)_PCPPFLAGS) $($(PROJECT)_PCFLAGS) -S $< -o $@
$(OUTDIR)/$(INTDIR)/%.e: $(SRCDIR)/%.c
	$(CC) $($(PROJECT)_PCPPFLAGS) $($(PROJECT)_PCFLAGS) -E $< -o $@
$(OUTDIR)/$(OBJDIR)/%.o: $(SRCDIR)/%.c
	$(CC) $($(PROJECT)_PCPPFLAGS) $($(PROJECT)_PCFLAGS) -c $< -o $@

$(ASS): $(PHDR) Makefile config.mk
$(INT): $(PHDR) Makefile config.mk
$(OBJ): $(PHDR) Makefile config.mk

$(PROJECT): options setup $(OBJ)
ifeq ($(MODE),SHARED)
	$(CC) -o $(OUTDIR)/$(TARGETNAME) $(OBJ) $($(PROJECT)_PLDFLAGS) -L$(OUTDIR) -l:$(LIBNAME)
else # Static
	$(CC) -o $(OUTDIR)/$(TARGETNAME) $(OBJ) $(OUTDIR)/$(LIBNAME) $($(PROJECT)_PLDFLAGS)
endif ## MODE

ass: setup options $(ASS) ;
int: setup options $(INT) ;
obj: setup options $(OBJ) ;

clean:
	$(RM) $(ASS)
	$(RM) $(INT)
	$(RM) $(OBJ)
	$(RM) $(OUTDIR)/$(TARGETNAME)
ifeq ($(HOST),LINUX)
	find $(OUTDIR)/$(ASSDIR) -type d -exec rmdir -v --ignore-fail-on-non-empty {} + 2>/dev/null || :
	find $(OUTDIR)/$(INTDIR) -type d -exec rmdir -v --ignore-fail-on-non-empty {} + 2>/dev/null || :
	find $(OUTDIR)/$(OBJDIR) -type d -exec rmdir -v --ignore-fail-on-non-empty {} + 2>/dev/null || :
	find $(OUTDIR) -type d -exec rmdir -v --ignore-fail-on-non-empty {} + 2>/dev/null || :
else
	$(RMDIR) $(OUTDIR)/$(ASSDIR) 2>$(NULL) || :
	$(RMDIR) $(OUTDIR)/$(OBJDIR) 2>$(NULL) || :
	$(RMDIR) $(OUTDIR)/$(INTDIR) 2>$(NULL) || :
	$(RMDIR) $(OUTDIR) 2>$(NULL) || :
endif

again: clean all

.PHONY: setup options ass int obj all again clean
